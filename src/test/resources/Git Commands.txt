*What is merge conflicts?
=>Conflicts generally arise when two people have changed the same lines in a file, or if one developer deleted a file while another developer was modifying it. In these cases, Git cannot automatically determine what is correct. Conflicts only affect the developer conducting the merge, the rest of the team is unaware of the conflict. Git will mark the file as being conflicted and halt the merging process. It is then the developers' responsibility to resolve the conflict.

*To check what are the changes?
=>git status

*To add all code to the stage?
=>git add .

*To check in which branch we are going to commit?
=>git branch

*To change or checkout to other branch?
=>git fetch && git checkout branch_name

*To commit code to the remote branch?
=>git commit -m "commit message"

*To push code to the branch?
=>git push

*To commit in last or past date?
=>git commit --date="xxx day ago" -m "yyy"


--------------------------------------------
Class Notes
--------------------------------------------

Git, Github
--------------
Git - local repository ( source code management system / vesrion control system)
Github - remote repository

pre-requisites:
-----------
1) Download & install git software
	https://git-scm.com/downloads

2) create account with github.com
	https://github.com/

3) Login to github.com & create  new remote repository. capture url.
https://github.com/pavanoltraining/opencart.git
Project work space:  C:\workspaces\15-Sept-2023batch\opencart

4) Create github token for login( create your own token)
	token : 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

work flow
---------
Round 1
-----
1)  create a new local repository  (one time)
=>git init

2) provided user info to git repo. (one time)
 
	git config --global user.name "your name"
    	git config --global user.email "your email"


3) Adding files/folders to staging/indexing
   git add -A         -->add all the files and folders to staging
    git add filename
    git add *.java
    git add foldername

4) Commit the code into Local(git) repository
	git commit -m "commit message"

5) connect local repository with remote rep.(One time)
	git remote add origin "https://github.com/pavanoltraining/opencart.git"
 
6) push the code into remote repository.
   	git push origin master


token : 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

Round 2
--------
1) git add -A
2) git commit -m "commit msge"
3) git push origin master

SCENARIO 1  :  Getting files from remote repository TO Local repo/workspace
----
git pull "https://github.com/pavanoltraining/opencart.git"


SCENARIO 2: Getting full project from Remote repository to local
-----
git clone "https://github.com/pavanoltraining/opencart.git"






-----------------------------------------------------------------------------------------------------------------------
How to use Eclipse git options
-----------------------------------------------------------------------------------------------------------------------
Cucumber Framework
--------
Git, Github Jenkins
-------------

Workspace-->Index/staging--->local repo-->Remote Repo
	       add                             commit             push

		 	
Git work flow
-----------------
Round 1
---------------
1) create github repository then get url
	https://github.com/pavanoltraining/opencart_cucumber.git

2) Create local repository
   Right on Project-->Team-->Share Project-->Create Repository-->Finish

3) Adding files to index/staging
    Right on Project-->Team-->Add to index

4) Commiting files to local/git repository
Team-->commit-->Provided commit message-->click on commit button.

5) Push the files to remote/github repository
	Team-->Push Branch Master     (or)
	Team-->Remote-->Push

	Provide destination repository details in the form.......

Remote name: origin
	URI:  https://github.com/pavanoltraining/opencart_cucumber.git
	Host: github.com
	Repository path: /pavanoltraining/opencart_cucumber.git

	User: github email
	Password: <<token password>>
Click on Preview-->Click on Preview-->Click on Push-->Close

Round 2 : Pull from Git Hub
------------------------
Team--> Pull  (first/second option)


Git tutorials: 
https://youtube.com/playlist?list=PLUDwpEzHYYLuMNNTu0EdWBeBtXdRhj4Lv&si=DXFFj8HaDxOErrFs


Round 2
--------------
Team-->Pull

Run the cucumber project in Jenkins  ( select as Maven project)..








 












